/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.newtonpaiva.gc.ui.contrato;

import br.newtonpaiva.modelo.Contrato;
import br.newtonpaiva.modelo.Documento;
import br.newtonpaiva.modelo.TermoAditivo;
import br.newtonpaiva.modelo.excessoes.TermoAditivoInvalidoException;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author pablo
 */
public class TelaTermoAditivo extends javax.swing.JDialog {

    private TermoAditivo termo;
    private List<TermoAditivo> termos;
    private Contrato contratoSelecionado;
    private DefaultTableModel tableModel;
    private DefaultTableModel tableModelTermo;
    private List<Documento> documentos;

    /**
     * Creates new form TelaTermoAditivo
     */
    public TelaTermoAditivo(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        ImageIcon imagemTituloJanela = new ImageIcon("../GC/resources/LogoPequena.jpg");
        setIconImage(imagemTituloJanela.getImage());
        setLocationRelativeTo(parent);
        inicializarTabela();
        inicializarTabelaTermo();
        this.setResizable(false);
        termo = new TermoAditivo();
        tabPanel.setSelectedIndex(0);
        txtDataTermo.requestFocus();
    }

    public void inicializarTermos() {
        try {
            termos = TermoAditivo.buscarPorIdContrato(contratoSelecionado.getId());
            if ((termos == null) || (termos.isEmpty())) {
                tableModelTermo.setRowCount(0);
            } else {
                tableModelTermo.setRowCount(0);
                for (TermoAditivo i : termos) {
                    SimpleDateFormat format1 = new SimpleDateFormat("dd/MM/yyyy");
                    String dataInicio = "";
                    if (i.getDataInicio() != null && !i.getDataInicio().toString().isEmpty()) {
                        dataInicio = format1.format(i.getDataInicio().getTime());
                    }

                    String dataFinal = "";
                    if (i.getDataTemino() != null && !i.getDataTemino().toString().isEmpty()) {
                        dataFinal = format1.format(i.getDataTemino().getTime());
                    }

                    String dataTermo = "";
                    if (i.getData() != null && !i.getData().toString().isEmpty()) {
                        dataTermo = format1.format(i.getData().getTime());
                    }

                    tableModelTermo.addRow(
                            new String[]{i.getId().toString(), dataTermo, dataInicio, dataFinal});
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(TelaTermoAditivo.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Erro localizar termos do contrato!");
        }

    }

    private void inicializarTabela() {
        tableModel = new DefaultTableModel(){
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        tableModel.addColumn("ID");
        tableModel.addColumn("Nome do Arquivo");

        //tableModel.addRow(new String[] {"1", "C:/teste.txt"});
        tblResultadoAnexo.setModel(tableModel);

    }

    private void inicializarTabelaTermo() {
        tableModelTermo = new DefaultTableModel(){
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        tableModelTermo.addColumn("ID");
        tableModelTermo.addColumn("Data Termo");
        tableModelTermo.addColumn("Data Início");
        tableModelTermo.addColumn("Data Término");

        tblResultadoAditivo.setModel(tableModelTermo);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabPanel = new javax.swing.JTabbedPane();
        tblDados = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtDataTermo = new javax.swing.JFormattedTextField();
        txtDataInicio = new javax.swing.JFormattedTextField();
        jLabel2 = new javax.swing.JLabel();
        txtDataTermino = new javax.swing.JFormattedTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtObservacao = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        btnLimparContrato = new javax.swing.JButton();
        btnSalvar = new javax.swing.JButton();
        btnAddAnexo = new javax.swing.JButton();
        btnBaixarAnexo = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblResultadoAnexo = new javax.swing.JTable();
        tblLista = new javax.swing.JPanel();
        JScroll1 = new javax.swing.JScrollPane();
        tblResultadoAditivo = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        btnExcluir = new javax.swing.JButton();
        btnSelecionar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Termo Aditivo");

        jLabel1.setText("Data do Termo");

        txtDataTermo.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter()));
        txtDataTermo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDataTermoActionPerformed(evt);
            }
        });

        txtDataInicio.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter()));
        txtDataInicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDataInicioActionPerformed(evt);
            }
        });

        jLabel2.setText("Data de Início");

        txtDataTermino.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter()));
        txtDataTermino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDataTerminoActionPerformed(evt);
            }
        });

        jLabel3.setText("Data de Término");

        jLabel9.setText("Observação");

        txtObservacao.setColumns(20);
        txtObservacao.setRows(5);
        jScrollPane1.setViewportView(txtObservacao);

        btnLimparContrato.setIcon(new javax.swing.ImageIcon(getClass().getResource("/clear.png"))); // NOI18N
        btnLimparContrato.setText("Limpar");
        btnLimparContrato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparContratoActionPerformed(evt);
            }
        });

        btnSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/save.png"))); // NOI18N
        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        btnAddAnexo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/attach.png"))); // NOI18N
        btnAddAnexo.setText("Adicionar Anexo");
        btnAddAnexo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddAnexoActionPerformed(evt);
            }
        });

        btnBaixarAnexo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/download.png"))); // NOI18N
        btnBaixarAnexo.setText("Baixar Anexo");
        btnBaixarAnexo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBaixarAnexoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnLimparContrato)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSalvar)
                .addGap(77, 77, 77)
                .addComponent(btnAddAnexo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnBaixarAnexo)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalvar)
                    .addComponent(btnLimparContrato)
                    .addComponent(btnAddAnexo)
                    .addComponent(btnBaixarAnexo))
                .addContainerGap())
        );

        tblResultadoAnexo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"", "Contrato Versão1.pdf"},
                {"", "Imagem.jpeg"},
                {null, "Contv2.pdf"},
                {null, "TesteErrado.doc"}
            },
            new String [] {
                "ID", "Nome do Arquivo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblResultadoAnexo);

        javax.swing.GroupLayout tblDadosLayout = new javax.swing.GroupLayout(tblDados);
        tblDados.setLayout(tblDadosLayout);
        tblDadosLayout.setHorizontalGroup(
            tblDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tblDadosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tblDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(tblDadosLayout.createSequentialGroup()
                        .addGroup(tblDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(tblDadosLayout.createSequentialGroup()
                                .addGroup(tblDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(txtDataTermo, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(tblDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(txtDataInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(tblDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(txtDataTermino, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel9))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addComponent(jScrollPane2)
        );
        tblDadosLayout.setVerticalGroup(
            tblDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tblDadosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tblDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(tblDadosLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDataTermino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(tblDadosLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDataInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(tblDadosLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDataTermo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE))
        );

        tabPanel.addTab("Dados do Termo", tblDados);

        tblResultadoAditivo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"", "Contrato Versão1.pdf"},
                {"", "Imagem.jpeg"},
                {null, "Contv2.pdf"},
                {null, "TesteErrado.doc"}
            },
            new String [] {
                "ID", "Nome do Arquivo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        JScroll1.setViewportView(tblResultadoAditivo);

        btnExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/del.png"))); // NOI18N
        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnSelecionar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ok-mini.png"))); // NOI18N
        btnSelecionar.setText("Selecionar");
        btnSelecionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelecionarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(159, 159, 159)
                .addComponent(btnExcluir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSelecionar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnExcluir)
                    .addComponent(btnSelecionar))
                .addContainerGap())
        );

        javax.swing.GroupLayout tblListaLayout = new javax.swing.GroupLayout(tblLista);
        tblLista.setLayout(tblListaLayout);
        tblListaLayout.setHorizontalGroup(
            tblListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tblListaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tblListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(JScroll1, javax.swing.GroupLayout.DEFAULT_SIZE, 531, Short.MAX_VALUE))
                .addContainerGap())
        );
        tblListaLayout.setVerticalGroup(
            tblListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tblListaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(JScroll1, javax.swing.GroupLayout.DEFAULT_SIZE, 289, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8))
        );

        tabPanel.addTab("Lista de Termos", tblLista);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabPanel)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 394, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSelecionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelecionarActionPerformed
        int selecionada = tblResultadoAditivo.getSelectedRow();
        if (selecionada == -1) {
            JOptionPane.showMessageDialog(null, "Nenhum registro selecionado");
        } else {
            int id = Integer.parseInt(tblResultadoAditivo.getValueAt(selecionada, 0).toString());
            try {
                termo = TermoAditivo.buscarPorId(id);
                if (termo == null) {
                    JOptionPane.showMessageDialog(null, "Aluno não encontrado, faça a consulta novamente.");
                } else {
                    setContratoSelecionado(termo.getContrato());
                    SimpleDateFormat format1 = new SimpleDateFormat("dd/MM/yyyy");
                    String dataInicio = "";
                    if (termo.getDataInicio() != null && !termo.getDataInicio().toString().isEmpty()) {
                        dataInicio = format1.format(termo.getDataInicio().getTime());
                    }
                    txtDataInicio.setText(dataInicio);

                    String dataTermino = "";
                    if (termo.getDataTemino() != null && !termo.getDataTemino().toString().isEmpty()) {
                        dataTermino = format1.format(termo.getDataTemino().getTime());
                    }
                    txtDataTermino.setText(dataTermino);

                    String dataTermo = "";
                    if (termo.getData() != null && !termo.getData().toString().isEmpty()) {
                        dataTermo = format1.format(termo.getData().getTime());
                    }
                    txtDataTermo.setText(dataTermo);

                    txtObservacao.setText(termo.getObservacao());

                    try {
                        documentos = TermoAditivo.buscarDocumentos(termo.getId());
                        if ((documentos == null) || (documentos.isEmpty())) {
                            tableModel.setRowCount(0);
                        } else {
                            tableModel.setRowCount(0);
                            for (Documento i : documentos) {
                                tableModel.addRow(
                                        new String[]{i.getId().toString(), i.getNome()});
                            }
                        }

                    } catch (IOException ex) {
                        Logger.getLogger(TelaContrato.class.getName()).log(Level.SEVERE, null, ex);
                    }

                    tabPanel.setSelectedIndex(0);
                    txtDataTermo.requestFocus();

                }
            } catch (SQLException ex) {
                Logger.getLogger(TelaTermoAditivo.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnSelecionarActionPerformed

    private void txtDataTerminoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDataTerminoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDataTerminoActionPerformed

    private void txtDataInicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDataInicioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDataInicioActionPerformed

    private void txtDataTermoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDataTermoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDataTermoActionPerformed

    private void btnLimparContratoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparContratoActionPerformed
        txtDataInicio.setText("");
        txtDataTermino.setText("");
        txtDataTermo.setText("");
        txtObservacao.setText("");
        inicializarTabela();
        termo = new TermoAditivo();
        tabPanel.setSelectedIndex(0);
        txtDataTermo.requestFocus();
    }//GEN-LAST:event_btnLimparContratoActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed

        SimpleDateFormat curFormater = new SimpleDateFormat("dd/MM/yyyy");
        Date dateObj;
        String dateStr;

        dateStr = txtDataInicio.getText();
        Calendar dataInicio = null;
        if (!dateStr.isEmpty()) {
            dateObj = null;
            try {
                dateObj = (Date) curFormater.parse(dateStr);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Data de entrada inválida");
            }
            dataInicio = Calendar.getInstance();
            dataInicio.setTime(dateObj);
        }

        dateStr = txtDataTermino.getText();
        Calendar dataTermino = null;
        if (!dateStr.isEmpty()) {
            dateObj = null;
            try {
                dateObj = (Date) curFormater.parse(dateStr);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Data de início inválida");
            }
            dataTermino = Calendar.getInstance();
            dataTermino.setTime(dateObj);
        }

        dateStr = txtDataTermo.getText();
        Calendar dataTermo = null;
        if (!dateStr.isEmpty()) {
            dateObj = null;
            try {
                dateObj = (Date) curFormater.parse(dateStr);
            } catch (ParseException ex) {
                JOptionPane.showMessageDialog(null, "Data de término inválida");
            }
            dataTermo = Calendar.getInstance();
            dataTermo.setTime(dateObj);
        }

        termo.setContrato(contratoSelecionado);
        termo.setData(dataTermo);
        termo.setDataInicio(dataInicio);
        termo.setDataTemino(dataTermino);
        termo.setObservacao(txtObservacao.getText());

        try {
            termo.salvar();
            tableModelTermo.addRow(
                    new String[]{termo.getId().toString(), txtDataTermo.getText(), txtDataInicio.getText(), txtDataTermino.getText()});
            JOptionPane.showMessageDialog(null, "Informações salvas com sucesso!");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao salvar contrato no banco de dados");
            Logger.getLogger(TelaContrato.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnAddAnexoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddAnexoActionPerformed

        if ((termo == null) || (termo.getId() == null)) {
            JOptionPane.showMessageDialog(this, "Nenhum termo selecionado!");
        } else {
            JFileChooser tela = new JFileChooser();
            int retorno = tela.showOpenDialog(this);

            if (retorno == JFileChooser.APPROVE_OPTION) {
                File arquivo = tela.getSelectedFile();
                //JOptionPane.showMessageDialog(null, arquivo.getAbsolutePath());
                try {
                    int id = termo.anexar(arquivo.getAbsolutePath());
                    tableModel.addRow(
                            new String[]{String.valueOf(id), arquivo.getName()});
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(TelaContrato.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(this, "Não foi possível encontrar o arquivo!");
                } catch (SQLException ex) {
                    Logger.getLogger(TelaContrato.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(this, "Erro ao inserir o arquivo no banco de dados!");
                } catch (IOException ex) {
                    Logger.getLogger(TelaTermoAditivo.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

        }
    }//GEN-LAST:event_btnAddAnexoActionPerformed

    private void btnBaixarAnexoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBaixarAnexoActionPerformed
        int selecionada = tblResultadoAnexo.getSelectedRow();
        if (selecionada == -1) {
            JOptionPane.showMessageDialog(null, "Nenhum registro selecionado");
        } else {
            JFileChooser tela = new JFileChooser();
            tela.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
            int retorno = tela.showSaveDialog(this);

            if (retorno == JFileChooser.APPROVE_OPTION) {
                File arquivo = tela.getSelectedFile();
                //JOptionPane.showMessageDialog(null, arquivo.getAbsolutePath() + "\\" + tblResultadoAnexo.getValueAt(selecionada, 1).toString());
                int id = Integer.parseInt(tblResultadoAnexo.getValueAt(selecionada, 0).toString());
                try {
                    Contrato.baixarDocumento(id, arquivo.getAbsolutePath() + "\\" + tblResultadoAnexo.getValueAt(selecionada, 1).toString());
                } catch (SQLException ex) {
                    Logger.getLogger(TelaContrato.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(null, "Erro ao baixar o arquivo do banco de dados! Favor entrar em contato com o Administrador do sistema.");
                } catch (IOException ex) {
                    Logger.getLogger(TelaContrato.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(null, "Erro localizar o caminho do arquivo!");
                }
            }
        }
    }//GEN-LAST:event_btnBaixarAnexoActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed

        int selecionada = tblResultadoAditivo.getSelectedRow();
        if (selecionada == -1) {
            JOptionPane.showMessageDialog(null, "Nenhum registro selecionado");
        } else {
            int i = JOptionPane.showConfirmDialog(null, "Confirma a exclusão do termo aditivo?");
            if (i == 0) {
                int id = Integer.parseInt(tblResultadoAditivo.getValueAt(selecionada, 0).toString());
                try {
                    TermoAditivo.excluir(id);
                    tableModelTermo.removeRow(selecionada);
                    btnLimparContratoActionPerformed(null);
                } catch (TermoAditivoInvalidoException ex) {
                    Logger.getLogger(TelaTermoAditivo.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(TelaTermoAditivo.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(null, "Erro ao excluir termo do bando dedados.,");
                }
            }
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaTermoAditivo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaTermoAditivo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaTermoAditivo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaTermoAditivo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                TelaTermoAditivo dialog = new TelaTermoAditivo(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane JScroll1;
    private javax.swing.JButton btnAddAnexo;
    private javax.swing.JButton btnBaixarAnexo;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnLimparContrato;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JButton btnSelecionar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane tabPanel;
    private javax.swing.JPanel tblDados;
    private javax.swing.JPanel tblLista;
    private javax.swing.JTable tblResultadoAditivo;
    private javax.swing.JTable tblResultadoAnexo;
    private javax.swing.JFormattedTextField txtDataInicio;
    private javax.swing.JFormattedTextField txtDataTermino;
    private javax.swing.JFormattedTextField txtDataTermo;
    private javax.swing.JTextArea txtObservacao;
    // End of variables declaration//GEN-END:variables

    /**
     * @param contratoSelecionado the contratoSelecionado to set
     */
    public void setContratoSelecionado(Contrato contratoSelecionado) {
        this.contratoSelecionado = contratoSelecionado;
        this.inicializarTermos();
    }

    /**
     * @return the btnAddAnexo
     */
    public javax.swing.JButton getBtnAddAnexo() {
        return btnAddAnexo;
    }

    /**
     * @return the btnExcluir
     */
    public javax.swing.JButton getBtnExcluir() {
        return btnExcluir;
    }

    /**
     * @return the btnLimparContrato
     */
    public javax.swing.JButton getBtnLimparContrato() {
        return btnLimparContrato;
    }

    /**
     * @return the btnSalvar
     */
    public javax.swing.JButton getBtnSalvar() {
        return btnSalvar;
    }
}
